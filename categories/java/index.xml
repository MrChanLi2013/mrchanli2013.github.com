<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 52zgd.com - 代码搬运工</title>
    <link>http://blog.52zgd.com/categories/java/</link>
    <description>Recent content in Java on 52zgd.com - 代码搬运工</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 20 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.52zgd.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>log4j自定义Appender</title>
      <link>http://blog.52zgd.com/post/log4j%E8%87%AA%E5%AE%9A%E4%B9%89appender/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://blog.52zgd.com/post/log4j%E8%87%AA%E5%AE%9A%E4%B9%89appender/</guid>
      <description>&lt;h4 id=&#34;背景&#34;&gt;背景&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;log4j&lt;/code&gt;本身已经提供了许多的&lt;code&gt;Appender&lt;/code&gt;，例如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ConsoleAppender&lt;/li&gt;
&lt;li&gt;FileAppender&lt;/li&gt;
&lt;li&gt;FlumeAppender&lt;/li&gt;
&lt;li&gt;JDBCAppender&lt;/li&gt;
&lt;li&gt;JMS Appender&lt;/li&gt;
&lt;li&gt;KafkaAppender&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;详情请看&lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/appenders.html&#34;&gt;log4j Appenders&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;可是有时候我们还是会有自己的特殊需求，比如我们项目中就遇到这样的情况：我们提供了一组&lt;code&gt;Restful API&lt;/code&gt;这组API是方便测试人员使用，调用这些接口，日志会打印至文件和kafka。但我们的测试你人员就需要到另外的地方查看日志，并不能调用了接口之后就看到执行日志。&lt;strong&gt;那我们应该怎么办？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>maven常用命令操作</title>
      <link>http://blog.52zgd.com/post/maven%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://blog.52zgd.com/post/maven%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;h1 id=&#34;maven常用操作&#34;&gt;maven常用操作&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;跳过测试：&lt;code&gt;mvn install -Dmaven.test.skip=true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Boot Junit 使用h2 database</title>
      <link>http://blog.52zgd.com/post/spring-boot-junit-%E4%BD%BF%E7%94%A8h2-database/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://blog.52zgd.com/post/spring-boot-junit-%E4%BD%BF%E7%94%A8h2-database/</guid>
      <description>&lt;h1 id=&#34;spring-boot-junit-使用h2-database&#34;&gt;spring boot junit 使用h2 database&lt;/h1&gt;

&lt;p&gt;@(java)[spring-boot-1.3.3,junit]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建测试使用的&lt;code&gt;Configuration&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.junit.runner.RunWith;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
    
@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(TestApplication.class)//测试主类入口
@TestPropertySource(locations = &amp;quot;classpath:test.properties&amp;quot;)//设置测试使用的配置文件
public class TestConfiguration {
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建测试入口类：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
    
@SpringBootApplication
public class TestApplication {
    public static void main(String[] args) throws Exception {
        SpringApplication.run(TestApplication.class, args);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java中Set和Array如何互转</title>
      <link>http://blog.52zgd.com/post/java%E4%B8%ADset%E5%92%8Carray%E5%A6%82%E4%BD%95%E4%BA%92%E8%BD%AC/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.52zgd.com/post/java%E4%B8%ADset%E5%92%8Carray%E5%A6%82%E4%BD%95%E4%BA%92%E8%BD%AC/</guid>
      <description>&lt;p&gt;我们有两种方式将Set转成Array&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Set.toArray()&lt;/code&gt; 方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stream&lt;/code&gt;java8中接口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>